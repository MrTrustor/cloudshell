#!/usr/bin/env bash
set -euox pipefail

# TODO check if 'podman' is available and use that if so, otherwise run with 'docker'
PODMAN_OR_DOCKER=podman


function test_container() {
  local name=$1

  CONTAINER_ID=$(${PODMAN_OR_DOCKER} run --name "${name}"-test -d -eUSER_ID=tester -eUSER_PWD=testit -p 8080 "${name}")

  # sleep is required because after docker run returns, the container is up but our server may not quite be yet
  # sleep 1

  HTTP_PORT="$(${PODMAN_OR_DOCKER} ps|grep "${name}"-test|sed 's/.*0.0.0.0://g'|sed 's/->.*//g')"

  # Access without uid & pwd should fail..
  if ! curl --silent --show-error http://localhost:"$HTTP_PORT"; then
    echo "TEST FAILED, accessible without BASIC auth"
    ${PODMAN_OR_DOCKER} rm -f "$CONTAINER_ID"
    return 1
  fi

  HTTP_REPLY=$(curl --user tester:testit --silent --show-error http://localhost:"$HTTP_PORT" | head --lines=1 -)

  ${PODMAN_OR_DOCKER} rm -f "$CONTAINER_ID"

  if [ "$HTTP_REPLY" = '<!doctype html>' ]; then
    echo "TEST PASSED"
    return 0
  else
    echo "TEST FAILED, not starting with expected <!doctype html>: $HTTP_REPLY"
    return 1
  fi
}


shellcheck -a build init

${PODMAN_OR_DOCKER} build -t cloudshell-fedora .
# TODO -t cloudshell-debian ... the problem is -t only works for the last image, so must parse output and map

test_container "cloudshell-fedora"
